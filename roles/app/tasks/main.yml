---
- name: install apt packages
  become: true
  apt: pkg={{ item }} update_cache=yes cache_valid_time=3600 state=present
  with_items:
    - build-essential
    - libssl-dev
    - git
    - nginx
    - exfat-fuse
    - exfat-utils
    - ntfs-3g
    - imagemagick
    - graphicsmagick
    - exiftool
    - sqlite3

- name: add deploy private key
  copy: src=~/.ssh/raspi-deploy dest=~/.ssh/ mode=600

- name: add deploy public key
  copy: src=~/.ssh/raspi-deploy.pub dest=~/.ssh/ mode=600

- name: add ssh config
  copy: src=ssh-config.txt dest=~/.ssh/config

# what is mode here??
- name: create media dir
  file: path=/media state=directory owner=root
  become: true

- name: create photo card mount point
  file: path=/media/card state=directory owner=root
  become: true

- name: create photo storage directories
  file: path=/media/{{ item }} state=directory owner={{ user }} mode=775
  become: true
  with_items:
    - storage
    - stories
    - small
    - thumb

# www app server service
- name: clone app
  git:
    repo: ssh://git@github.com/johnelliott/image-hub.git
    dest: ~/image-hub
    version: "{{ image_hub_app_version }}"
    accept_hostkey: yes
    key_file: "{{ github_key }}"
    force: true

- name: copy image-hub environment configuration
  copy: src=image-hub.env dest={{ image_hub_app_path }}/.env

- name: build app
  shell: . $HOME/.nvm/nvm.sh && npm install && npm run build
  args:
    chdir: "{{ image_hub_app_path }}"
    executable: /bin/bash

- name: create systemd journal dir
  file: path=/var/log/journal state=directory mode=775 group=systemd-journal
  become: true

- name: add user to systemd-journal group
  user:
    name: "{{ user }}"
    groups: systemd-journal
    append: true
  become: true


# Nginx static server
- name: create cert dir
  become: true
  file: path={{ cert_path }} state=directory owner=root mode=644
- name: copy SSL cert fullchain
  copy:
    src: fullchain.pem
    dest: "{{ cert_path }}"
  become: true
- name: copy SSL cert privkey
  copy:
    src: privkey.pem
    dest: "{{ cert_path }}"
  become: true

# TODO symlink nginx config symlink
- name: nginx prepare
  become: yes
  file:
    dest: /etc/nginx/sites-enabled/default
    state: absent

- name: nginx site install
  become: yes
  template:
    src: image-hub.nginx.conf.j2
    dest: /etc/nginx/sites-available/image-hub.nginx.conf
    owner: root

- name: nginx site enable
  become: yes
  file:
    src: /etc/nginx/sites-available/image-hub.nginx.conf
    dest: /etc/nginx/sites-enabled/image-hub.nginx.conf
    state: link
    owner: root
  notify: nginx reload

# etl service
- name: install etl
  become: yes
  template:
    src: image-hub-etl.service.j2
    dest: /etc/systemd/system/image-hub-etl.service
    owner: root

- name: enable etl
  become: yes
  systemd:
    name: image-hub-etl
    enabled: yes
    state: started
    daemon_reload: yes
  notify: restart etl

# www service
- name: install www
  become: yes
  template:
    src: image-hub-www.service.j2
    dest: /etc/systemd/system/image-hub-www.service
    owner: root

- name: enable www
  become: yes
  systemd:
    name: image-hub-www
    enabled: yes
    state: started
    daemon_reload: yes
  notify: restart www

# card service
- name: install card
  become: yes
  copy:
    src: ./image-hub-card.service
    dest: /etc/systemd/system/image-hub-card.service
    owner: root

- name: enable card
  become: yes
  systemd:
    name: image-hub-card
    enabled: yes
    state: started
    daemon_reload: yes
  notify: restart card

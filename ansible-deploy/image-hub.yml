---
- hosts: carbon
  vars:
    user: pi
    cron_email: johnelliott703@gmail.com
    nvm_version: v0.33.6
    node_version: v8.9.1
    image_hub_app_version: master
    image_hub_app_path: /home/{{ user }}/image-hub
    github_key: /home/{{ user }}/.ssh/github_rsa
  tasks:
  - name: Install apt packages
    become: true
    apt: pkg={{ item }} update_cache=yes cache_valid_time=3600 state=present
    with_items:
      - build-essential
      - libssl-dev
      - git
      - vim
      - ssmtp
      - mpack
      - rsync
      - exfat-fuse
      - exfat-utils
      - ntfs-3g
      - imagemagick
      - graphicsmagick
      - exiftool
  - name: Download .vimrc
    get_url:
      url: https://raw.githubusercontent.com/johnelliott/dotfiles/master/.vimrc.min
      dest: ~/.vimrc
  - name: add deploy private key
    copy: src=~/.ssh/raspi-deploy dest=~/.ssh/ mode=600
  - name: add deploy public key
    copy: src=~/.ssh/raspi-deploy.pub dest=~/.ssh/ mode=600
  - name: add ssh config
    copy: src=./ssh-config.txt dest=~/.ssh/config

  - name: Install nvm
    git: repo=https://github.com/creationix/nvm.git dest=/home/{{ user }}/.nvm version={{ nvm_version }}
  - name: Configure ~/.profile to source nvm
    lineinfile:
      dest: /home/{{ user }}/.profile
      line: '[ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh  # This loads NVM'
      create: yes
  - name: Configure ~/.profile to have NVM_DIR
    lineinfile:
      dest: /home/{{ user }}/.profile
      insertbefore: 'NVM$'
      line: 'export NVM_DIR="$HOME/.nvm"'
      create: yes
  - name: Install node
    shell: . "$HOME/.nvm/nvm.sh" && nvm install "{{ node_version }}"
    args:
      executable: /bin/bash
    # capture installed node version as ansible variable:
    # https://github.com/leonidas/ansible-nvm/blob/master/tasks/main.yml
    register: nvm_install_result
    #capture installed node version as ansible variable:
    # https://github.com/leonidas/ansible-nvm/blob/master/tasks/main.yml
    changed_when: "'is already installed.' not in nvm_install_result.stderr"
  - name: Check if {{ node_version }} is the current node version
    shell: . /home/{{ user }}/.nvm/nvm.sh && nvm current
    args:
      executable: /bin/bash
    # capture node version as ansible variable:
    # https://github.com/leonidas/ansible-nvm/blob/master/tasks/main.yml
    register: nvm_check_default
    changed_when: node_version == nvm_check_default.stdout
    # changed_when: False
    ignore_errors: True
  - name: Set default node version to {{ node_version }} for future interactive use
    shell: nvm alias default {{ node_version }}
    when: nvm_check_default|failed

  - name: Install image-hub
    git:
      repo: ssh://git@github.com/johnelliott/image-hub.git
      dest: ~/image-hub
      version: "{{ image_hub_app_version }}"
      accept_hostkey: yes
      key_file: "{{ github_key }}"

  - name: NPM install
    shell: . $HOME/.nvm/nvm.sh && npm install
    args:
      chdir: "{{ image_hub_app_path }}"
      executable: /bin/bash

  # what is mode here??
  - name: Create media dir
    file: path=/media state=directory owner=root
    become: true
  - name: Create photo card mount point
    file: path=/media/card state=directory owner=root
    become: true

  - name: Create photo storage directories
    file: path=/media/{{ item }} state=directory owner={{ user }} mode=775
    become: true
    with_items:
      - storage
      - stories
      - small

  # TODO install systemd services and enable them
  # TODO install nginx config
  # TODO install wpa_supplicant for wifi network access

  - name: Set cron email address
    cronvar:
      name: EMAIL
      value: "{{ cron_email }}"
  - name: Make cron job for card loop
    cron:
      name: "Card loop on reboot"
      special_time: reboot
      job: "sudo {{ image_hub_app_path }}/rsync-loop.sh > /home/{{ user }}//rsync-loop.log"

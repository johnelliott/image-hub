---
- hosts: displays
  vars:
    user: pi
    nvm_version: v0.33.6
    node_version: v8.9.2
    image_hub_app_version: master
    image_hub_app_path: /home/{{ user }}/image-hub
    github_key: /home/{{ user }}/.ssh/github_rsa
  tasks:
  - name: install apt packages
    become: true
    apt: pkg={{ item }} update_cache=yes cache_valid_time=3600 state=present
    with_items:
      - build-essential
      - libssl-dev
      - git
      - nginx
      - i2c-tools
  - name: enable i2c
    lineinfile: path=/etc/modules line=i2c-dev state=present
    become: true
  - name: unblacklist i2c
    lineinfile:
      path: /etc/modprobe.d/raspi-blacklist.conf
      regexp: '^blacklist i2c-bcm2708'
      line: '#blacklist i2c-bcm2708'
      state: present
    become: true
  - name: Install nvm
    git: repo=https://github.com/creationix/nvm.git dest=/home/{{ user }}/.nvm version={{ nvm_version }}
  - name: configure ~/.profile to source nvm
    lineinfile:
      dest: /home/{{ user }}/.profile
      line: '[ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh  # This loads NVM'
      create: yes
  - name: configure ~/.profile to have nvm_dir
    lineinfile:
      dest: /home/{{ user }}/.profile
      insertbefore: 'NVM$'
      line: 'export NVM_DIR="$HOME/.nvm"'
      create: yes
  - name: install node
    shell: . "$HOME/.nvm/nvm.sh" && nvm install "{{ node_version }}"
    args:
      executable: /bin/bash
    # capture installed node version as ansible variable:
    # https://github.com/leonidas/ansible-nvm/blob/master/tasks/main.yml
    register: nvm_install_result
    #capture installed node version as ansible variable:
    # https://github.com/leonidas/ansible-nvm/blob/master/tasks/main.yml
    changed_when: "'is already installed.' not in nvm_install_result.stderr"
  - name: check if {{ node_version }} is the current node version
    shell: . /home/{{ user }}/.nvm/nvm.sh && nvm current
    args:
      executable: /bin/bash
    # capture node version as ansible variable:
    # https://github.com/leonidas/ansible-nvm/blob/master/tasks/main.yml
    register: nvm_check_default
    changed_when: node_version == nvm_check_default.stdout
    # changed_when: False
    ignore_errors: True
  - name: Set default node version to {{ node_version }} for future interactive use
    shell: nvm alias default {{ node_version }}
    when: nvm_check_default|failed

  - name: clone app
    git:
      repo: ssh://git@github.com/johnelliott/image-hub.git
      dest: ~/image-hub
      version: "{{ image_hub_app_version }}"
      accept_hostkey: yes
      key_file: "{{ github_key }}"
      force: true

  - name: create systemd journal dir
    file: path=/var/log/journal state=directory mode=775 group=systemd-journal
    become: true
  - name: add user to systemd-journal group
    user:
      name: "{{ user }}"
      groups: systemd-journal
      append: true
    become: true

  - name: install service
    become: yes
    file:
      dest: /etc/systemd/system/image-hub-display.service
      src: /home/{{ user }}/image-hub/image-hub-display.service
      state: link
      owner: root
  - name: enable service
    become: yes
    systemd:
      name: image-hub-display
      enabled: yes
      state: started
      daemon_reload: yes
    notify: restart-service

  handlers:
  - name: restart-service
    become: yes
    systemd:
      name: image-hub-display
      enabled: yes
      state: restarted
